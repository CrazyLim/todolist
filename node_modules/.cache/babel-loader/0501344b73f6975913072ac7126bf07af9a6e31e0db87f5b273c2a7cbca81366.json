{"ast":null,"code":"var _jsxFileName = \"E:\\\\Leon\\\\todolist\\\\src\\\\components\\\\GomokuGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './GomokuGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GomokuGame = () => {\n  _s();\n  const BOARD_SIZE = 15;\n  const [board, setBoard] = useState(Array(BOARD_SIZE).fill().map(() => Array(BOARD_SIZE).fill(null)));\n  const [currentPlayer, setCurrentPlayer] = useState('black');\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n\n  // 检查获胜条件\n  const checkWin = (row, col) => {\n    const directions = [[0, 1],\n    // 水平\n    [1, 0],\n    // 垂直\n    [1, 1],\n    // 对角线\n    [1, -1] // 反对角线\n    ];\n    for (const [dx, dy] of directions) {\n      let count = 1;\n      // 向一个方向检查\n      for (let i = 1; i <= 4; i++) {\n        const newRow = row + i * dx;\n        const newCol = col + i * dy;\n        if (newRow >= 0 && newRow < BOARD_SIZE && newCol >= 0 && newCol < BOARD_SIZE && board[newRow][newCol] === currentPlayer) {\n          count++;\n        } else {\n          break;\n        }\n      }\n      // 向相反方向检查\n      for (let i = 1; i <= 4; i++) {\n        const newRow = row - i * dx;\n        const newCol = col - i * dy;\n        if (newRow >= 0 && newRow < BOARD_SIZE && newCol >= 0 && newCol < BOARD_SIZE && board[newRow][newCol] === currentPlayer) {\n          count++;\n        } else {\n          break;\n        }\n      }\n      // 五子连珠\n      if (count >= 5) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // 处理落子\n  const handleCellClick = (row, col) => {\n    if (gameOver || board[row][col] !== null) return;\n    const newBoard = board.map(r => [...r]);\n    newBoard[row][col] = currentPlayer;\n    setBoard(newBoard);\n    if (checkWin(row, col)) {\n      setGameOver(true);\n      setWinner(currentPlayer);\n    } else {\n      setCurrentPlayer(currentPlayer === 'black' ? 'white' : 'black');\n    }\n  };\n\n  // 重置游戏\n  const resetGame = () => {\n    setBoard(Array(BOARD_SIZE).fill().map(() => Array(BOARD_SIZE).fill(null)));\n    setCurrentPlayer('black');\n    setGameOver(false);\n    setWinner(null);\n  };\n\n  // 绘制棋盘\n  const renderBoard = () => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gomoku-board\",\n      children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"gomoku-row\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"gomoku-cell\",\n          onClick: () => handleCellClick(rowIndex, colIndex),\n          children: cell && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `gomoku-stone ${cell}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 26\n          }, this)\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gomoku-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u4E94\\u5B50\\u68CB\\u6E38\\u620F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"game-info\",\n      children: gameOver ? `游戏结束！获胜方: ${winner === 'black' ? '黑方' : '白方'}` : `当前回合: ${currentPlayer === 'black' ? '黑方' : '白方'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), renderBoard(), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"reset-btn\",\n      onClick: resetGame,\n      children: \"\\u91CD\\u65B0\\u5F00\\u59CB\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-rules\",\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\u6E38\\u620F\\u89C4\\u5219\\uFF1A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u9ED1\\u65B9\\u5148\\u884C\\uFF0C\\u53CC\\u65B9\\u8F6E\\u6D41\\u5728\\u68CB\\u76D8\\u4E0A\\u843D\\u5B50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u5148\\u5728\\u6A2A\\u3001\\u7AD6\\u6216\\u5BF9\\u89D2\\u7EBF\\u65B9\\u5411\\u8FDE\\u6210\\u4E94\\u5B50\\u7684\\u4E00\\u65B9\\u83B7\\u80DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"\\u70B9\\u51FB\\u68CB\\u76D8\\u4E0A\\u7684\\u4EA4\\u53C9\\u70B9\\u843D\\u5B50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n};\n_s(GomokuGame, \"AVriXeOGN9js/T9fU/mWoDkV3eY=\");\n_c = GomokuGame;\nexport default GomokuGame;\nvar _c;\n$RefreshReg$(_c, \"GomokuGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","GomokuGame","_s","BOARD_SIZE","board","setBoard","Array","fill","map","currentPlayer","setCurrentPlayer","gameOver","setGameOver","winner","setWinner","checkWin","row","col","directions","dx","dy","count","i","newRow","newCol","handleCellClick","newBoard","r","resetGame","renderBoard","className","children","rowIndex","cell","colIndex","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["E:/Leon/todolist/src/components/GomokuGame.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './GomokuGame.css';\n\nconst GomokuGame = () => {\n  const BOARD_SIZE = 15;\n  const [board, setBoard] = useState(Array(BOARD_SIZE).fill().map(() => Array(BOARD_SIZE).fill(null)));\n  const [currentPlayer, setCurrentPlayer] = useState('black');\n  const [gameOver, setGameOver] = useState(false);\n  const [winner, setWinner] = useState(null);\n\n  // 检查获胜条件\n  const checkWin = (row, col) => {\n    const directions = [\n      [0, 1],  // 水平\n      [1, 0],  // 垂直\n      [1, 1],  // 对角线\n      [1, -1]  // 反对角线\n    ];\n\n    for (const [dx, dy] of directions) {\n      let count = 1;\n      // 向一个方向检查\n      for (let i = 1; i <= 4; i++) {\n        const newRow = row + i * dx;\n        const newCol = col + i * dy;\n        if (newRow >= 0 && newRow < BOARD_SIZE && newCol >= 0 && newCol < BOARD_SIZE && \n            board[newRow][newCol] === currentPlayer) {\n          count++;\n        } else {\n          break;\n        }\n      }\n      // 向相反方向检查\n      for (let i = 1; i <= 4; i++) {\n        const newRow = row - i * dx;\n        const newCol = col - i * dy;\n        if (newRow >= 0 && newRow < BOARD_SIZE && newCol >= 0 && newCol < BOARD_SIZE && \n            board[newRow][newCol] === currentPlayer) {\n          count++;\n        } else {\n          break;\n        }\n      }\n      // 五子连珠\n      if (count >= 5) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  // 处理落子\n  const handleCellClick = (row, col) => {\n    if (gameOver || board[row][col] !== null) return;\n\n    const newBoard = board.map(r => [...r]);\n    newBoard[row][col] = currentPlayer;\n    setBoard(newBoard);\n\n    if (checkWin(row, col)) {\n      setGameOver(true);\n      setWinner(currentPlayer);\n    } else {\n      setCurrentPlayer(currentPlayer === 'black' ? 'white' : 'black');\n    }\n  };\n\n  // 重置游戏\n  const resetGame = () => {\n    setBoard(Array(BOARD_SIZE).fill().map(() => Array(BOARD_SIZE).fill(null)));\n    setCurrentPlayer('black');\n    setGameOver(false);\n    setWinner(null);\n  };\n\n  // 绘制棋盘\n  const renderBoard = () => {\n    return (\n      <div className=\"gomoku-board\">\n        {board.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"gomoku-row\">\n            {row.map((cell, colIndex) => (\n              <div \n                key={colIndex} \n                className=\"gomoku-cell\"\n                onClick={() => handleCellClick(rowIndex, colIndex)}\n              >\n                {cell && <div className={`gomoku-stone ${cell}`}></div>}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"gomoku-game\">\n      <h3>五子棋游戏</h3>\n      <p className=\"game-info\">\n        {gameOver ? \n          `游戏结束！获胜方: ${winner === 'black' ? '黑方' : '白方'}` : \n          `当前回合: ${currentPlayer === 'black' ? '黑方' : '白方'}`}\n      </p>\n      {renderBoard()}\n      <button className=\"reset-btn\" onClick={resetGame}>重新开始</button>\n      <div className=\"game-rules\">\n        <h4>游戏规则：</h4>\n        <ol>\n          <li>黑方先行，双方轮流在棋盘上落子</li>\n          <li>先在横、竖或对角线方向连成五子的一方获胜</li>\n          <li>点击棋盘上的交叉点落子</li>\n        </ol>\n      </div>\n    </div>\n  );\n};\n\nexport default GomokuGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}