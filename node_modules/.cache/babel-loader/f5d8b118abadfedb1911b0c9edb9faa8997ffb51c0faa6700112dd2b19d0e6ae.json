{"ast":null,"code":"var _jsxFileName = \"E:\\\\Leon\\\\todolist\\\\src\\\\components\\\\VisitTracker.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './VisitTracker.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction VisitTracker() {\n  _s();\n  const [visits, setVisits] = useState([]);\n  const [todayVisits, setTodayVisits] = useState(0);\n  const [totalVisits, setTotalVisits] = useState(0);\n  const [mostVisitedPage, setMostVisitedPage] = useState({\n    page: '暂无数据',\n    count: 0\n  });\n  const [dateRange, setDateRange] = useState('all'); // 'all', 'today', 'week', 'month'\n  const [filteredVisits, setFilteredVisits] = useState([]);\n\n  // 初始化访问数据\n  useEffect(() => {\n    loadVisitData();\n    updateVisitStats();\n  }, [dateRange]);\n\n  // 为了演示目的，添加一些初始模拟数据\n  useEffect(() => {\n    const storedVisits = localStorage.getItem('visitRecords');\n    if (!storedVisits || JSON.parse(storedVisits).length === 0) {\n      // 创建一些模拟访问数据\n      const mockVisits = [{\n        timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n        page: 'travel',\n        userInfo: '游客',\n        deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n      }, {\n        timestamp: new Date(Date.now() - 1.5 * 60 * 60 * 1000).toISOString(),\n        page: 'tasks',\n        userInfo: '游客',\n        deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n      }, {\n        timestamp: new Date(Date.now() - 60 * 60 * 1000).toISOString(),\n        page: 'games',\n        userInfo: '游客',\n        deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n      }, {\n        timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\n        page: 'realestate',\n        userInfo: '游客',\n        deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n      }, {\n        timestamp: new Date(Date.now() - 15 * 60 * 1000).toISOString(),\n        page: 'travel',\n        userInfo: '游客',\n        deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n      }, {\n        timestamp: new Date(Date.now() - 5 * 60 * 1000).toISOString(),\n        page: 'jokes',\n        userInfo: '游客',\n        deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n      }];\n\n      // 保存模拟数据\n      localStorage.setItem('visitRecords', JSON.stringify(mockVisits));\n\n      // 重新加载数据\n      loadVisitData();\n      updateVisitStats();\n    }\n  }, []);\n\n  // 从localStorage加载访问数据\n  const loadVisitData = () => {\n    try {\n      const storedVisits = localStorage.getItem('visitRecords');\n      if (storedVisits) {\n        const parsedVisits = JSON.parse(storedVisits);\n        setVisits(parsedVisits);\n        applyDateFilter(parsedVisits);\n      }\n    } catch (error) {\n      console.error('加载访问记录失败:', error);\n      setVisits([]);\n      setFilteredVisits([]);\n    }\n  };\n\n  // 应用日期过滤\n  const applyDateFilter = allVisits => {\n    const now = new Date();\n    let filtered = [...allVisits];\n    switch (dateRange) {\n      case 'today':\n        filtered = allVisits.filter(visit => {\n          const visitDate = new Date(visit.timestamp);\n          return visitDate.toDateString() === now.toDateString();\n        });\n        break;\n      case 'week':\n        const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n        filtered = allVisits.filter(visit => new Date(visit.timestamp) >= weekAgo);\n        break;\n      case 'month':\n        const monthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n        filtered = allVisits.filter(visit => new Date(visit.timestamp) >= monthAgo);\n        break;\n      default:\n        // 显示所有记录\n        break;\n    }\n    setFilteredVisits(filtered);\n  };\n\n  // 更新访问统计数据\n  const updateVisitStats = () => {\n    const now = new Date();\n    const today = now.toDateString();\n\n    // 计算总访问次数\n    setTotalVisits(visits.length);\n\n    // 计算今日访问次数\n    const todayCount = visits.filter(visit => {\n      const visitDate = new Date(visit.timestamp);\n      return visitDate.toDateString() === today;\n    }).length;\n    setTodayVisits(todayCount);\n\n    // 找出访问次数最多的页面\n    const pageCounts = {};\n    visits.forEach(visit => {\n      pageCounts[visit.page] = (pageCounts[visit.page] || 0) + 1;\n    });\n    let maxPage = '暂无数据';\n    let maxCount = 0;\n    for (const page in pageCounts) {\n      if (pageCounts[page] > maxCount) {\n        maxCount = pageCounts[page];\n        maxPage = page;\n      }\n    }\n    setMostVisitedPage({\n      page: maxPage,\n      count: maxCount\n    });\n  };\n\n  // 格式化时间戳\n  const formatTimestamp = timestamp => {\n    return new Date(timestamp).toLocaleString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  // 清空所有访问记录\n  const clearAllVisits = () => {\n    if (window.confirm('确定要清空所有访问记录吗？此操作不可恢复。')) {\n      localStorage.removeItem('visitRecords');\n      setVisits([]);\n      setFilteredVisits([]);\n      setTotalVisits(0);\n      setTodayVisits(0);\n      setMostVisitedPage({\n        page: '暂无数据',\n        count: 0\n      });\n    }\n  };\n\n  // 获取页面的中文名称\n  const getPageDisplayName = pageKey => {\n    const pageNames = {\n      'travel': '旅游计划',\n      'games': '游戏中心',\n      'jokes': '笑话管理',\n      'tasks': '任务列表',\n      'realestate': '深圳房产信息',\n      'analytics': '数据分析',\n      'unknown': '未知页面'\n    };\n    return pageNames[pageKey] || pageKey;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"visit-tracker-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uD83D\\uDCCA \\u8BBF\\u95EE\\u8BB0\\u5F55\\u7EDF\\u8BA1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"stats-overview\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-number\",\n          children: totalVisits\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"\\u603B\\u8BBF\\u95EE\\u6B21\\u6570\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-number\",\n          children: todayVisits\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: \"\\u4ECA\\u65E5\\u8BBF\\u95EE\\u6B21\\u6570\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-number\",\n          children: mostVisitedPage.count\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"stat-label\",\n          children: [\"\\u6700\\u5E38\\u8BBF\\u95EE\\u9875\\u9762\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"most-visited-page\",\n            children: getPageDisplayName(mostVisitedPage.page)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u9009\\u62E9\\u65F6\\u95F4\\u8303\\u56F4\\uFF1A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: dateRange,\n        onChange: e => setDateRange(e.target.value),\n        className: \"date-filter\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"\\u5168\\u90E8\\u8BB0\\u5F55\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"today\",\n          children: \"\\u4ECA\\u65E5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"week\",\n          children: \"\\u8FD17\\u5929\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"month\",\n          children: \"\\u8FD130\\u5929\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"clear-btn\",\n        onClick: clearAllVisits,\n        children: \"\\u6E05\\u7A7A\\u8BB0\\u5F55\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"visits-list-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u8BBF\\u95EE\\u8BB0\\u5F55\\u5217\\u8868 (\", filteredVisits.length, \" \\u6761)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"visits-list\",\n        children: filteredVisits.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"empty-state\",\n          children: \"\\u6682\\u65E0\\u8BBF\\u95EE\\u8BB0\\u5F55\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 13\n        }, this) : filteredVisits.slice().reverse() // 倒序排列，最新的在前面\n        .map((visit, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"visit-item\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"visit-time\",\n            children: formatTimestamp(visit.timestamp)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"visit-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"visit-page\",\n              children: [\"\\u9875\\u9762\\uFF1A\", getPageDisplayName(visit.page)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 21\n            }, this), visit.userInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"visit-user\",\n              children: [\"\\u7528\\u6237\\uFF1A\", visit.userInfo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 23\n            }, this), visit.deviceInfo && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"visit-device\",\n              children: [\"\\u8BBE\\u5907\\uFF1A\", visit.deviceInfo]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 19\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page-stats-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u9875\\u9762\\u8BBF\\u95EE\\u7EDF\\u8BA1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-stats\",\n        children: (() => {\n          // 计算各页面的访问次数\n          const pageCounts = {};\n          visits.forEach(visit => {\n            pageCounts[visit.page] = (pageCounts[visit.page] || 0) + 1;\n          });\n\n          // 转换为数组并排序\n          const sortedPages = Object.entries(pageCounts).map(([page, count]) => ({\n            page,\n            count\n          })).sort((a, b) => b.count - a.count);\n          return sortedPages.map((item, index) => {\n            const percentage = item.count / visits.length * 100;\n            return /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"page-stat-item\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"page-stat-label\",\n                children: [getPageDisplayName(item.page), \" (\", item.count, \"\\u6B21 - \", percentage.toFixed(1), \"%)\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 282,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"page-stat-bar\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"page-stat-fill\",\n                  style: {\n                    width: `${percentage}%`\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 286,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 285,\n                columnNumber: 19\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 281,\n              columnNumber: 17\n            }, this);\n          });\n        })()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n}\n_s(VisitTracker, \"pIolpZhqr+Jbbmoy/pWg75oUiJs=\");\n_c = VisitTracker;\nexport default VisitTracker;\nvar _c;\n$RefreshReg$(_c, \"VisitTracker\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","VisitTracker","_s","visits","setVisits","todayVisits","setTodayVisits","totalVisits","setTotalVisits","mostVisitedPage","setMostVisitedPage","page","count","dateRange","setDateRange","filteredVisits","setFilteredVisits","loadVisitData","updateVisitStats","storedVisits","localStorage","getItem","JSON","parse","length","mockVisits","timestamp","Date","now","toISOString","userInfo","deviceInfo","setItem","stringify","parsedVisits","applyDateFilter","error","console","allVisits","filtered","filter","visit","visitDate","toDateString","weekAgo","getTime","monthAgo","today","todayCount","pageCounts","forEach","maxPage","maxCount","formatTimestamp","toLocaleString","year","month","day","hour","minute","second","clearAllVisits","window","confirm","removeItem","getPageDisplayName","pageKey","pageNames","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onClick","slice","reverse","map","index","sortedPages","Object","entries","sort","a","b","item","percentage","toFixed","style","width","_c","$RefreshReg$"],"sources":["E:/Leon/todolist/src/components/VisitTracker.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './VisitTracker.css';\n\nfunction VisitTracker() {\n  const [visits, setVisits] = useState([]);\n  const [todayVisits, setTodayVisits] = useState(0);\n  const [totalVisits, setTotalVisits] = useState(0);\n  const [mostVisitedPage, setMostVisitedPage] = useState({ page: '暂无数据', count: 0 });\n  const [dateRange, setDateRange] = useState('all'); // 'all', 'today', 'week', 'month'\n  const [filteredVisits, setFilteredVisits] = useState([]);\n\n  // 初始化访问数据\n  useEffect(() => {\n    loadVisitData();\n    updateVisitStats();\n  }, [dateRange]);\n  \n  // 为了演示目的，添加一些初始模拟数据\n  useEffect(() => {\n    const storedVisits = localStorage.getItem('visitRecords');\n    if (!storedVisits || JSON.parse(storedVisits).length === 0) {\n      // 创建一些模拟访问数据\n      const mockVisits = [\n        {\n          timestamp: new Date(Date.now() - 2 * 60 * 60 * 1000).toISOString(),\n          page: 'travel',\n          userInfo: '游客',\n          deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n        },\n        {\n          timestamp: new Date(Date.now() - 1.5 * 60 * 60 * 1000).toISOString(),\n          page: 'tasks',\n          userInfo: '游客',\n          deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n        },\n        {\n          timestamp: new Date(Date.now() - 60 * 60 * 1000).toISOString(),\n          page: 'games',\n          userInfo: '游客',\n          deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n        },\n        {\n          timestamp: new Date(Date.now() - 30 * 60 * 1000).toISOString(),\n          page: 'realestate',\n          userInfo: '游客',\n          deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n        },\n        {\n          timestamp: new Date(Date.now() - 15 * 60 * 1000).toISOString(),\n          page: 'travel',\n          userInfo: '游客',\n          deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n        },\n        {\n          timestamp: new Date(Date.now() - 5 * 60 * 1000).toISOString(),\n          page: 'jokes',\n          userInfo: '游客',\n          deviceInfo: 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36'\n        }\n      ];\n      \n      // 保存模拟数据\n      localStorage.setItem('visitRecords', JSON.stringify(mockVisits));\n      \n      // 重新加载数据\n      loadVisitData();\n      updateVisitStats();\n    }\n  }, []);\n\n  // 从localStorage加载访问数据\n  const loadVisitData = () => {\n    try {\n      const storedVisits = localStorage.getItem('visitRecords');\n      if (storedVisits) {\n        const parsedVisits = JSON.parse(storedVisits);\n        setVisits(parsedVisits);\n        applyDateFilter(parsedVisits);\n      }\n    } catch (error) {\n      console.error('加载访问记录失败:', error);\n      setVisits([]);\n      setFilteredVisits([]);\n    }\n  };\n\n  // 应用日期过滤\n  const applyDateFilter = (allVisits) => {\n    const now = new Date();\n    let filtered = [...allVisits];\n\n    switch (dateRange) {\n      case 'today':\n        filtered = allVisits.filter(visit => {\n          const visitDate = new Date(visit.timestamp);\n          return visitDate.toDateString() === now.toDateString();\n        });\n        break;\n      case 'week':\n        const weekAgo = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n        filtered = allVisits.filter(visit => new Date(visit.timestamp) >= weekAgo);\n        break;\n      case 'month':\n        const monthAgo = new Date(now.getTime() - 30 * 24 * 60 * 60 * 1000);\n        filtered = allVisits.filter(visit => new Date(visit.timestamp) >= monthAgo);\n        break;\n      default:\n        // 显示所有记录\n        break;\n    }\n\n    setFilteredVisits(filtered);\n  };\n\n  // 更新访问统计数据\n  const updateVisitStats = () => {\n    const now = new Date();\n    const today = now.toDateString();\n    \n    // 计算总访问次数\n    setTotalVisits(visits.length);\n    \n    // 计算今日访问次数\n    const todayCount = visits.filter(visit => {\n      const visitDate = new Date(visit.timestamp);\n      return visitDate.toDateString() === today;\n    }).length;\n    setTodayVisits(todayCount);\n    \n    // 找出访问次数最多的页面\n    const pageCounts = {};\n    visits.forEach(visit => {\n      pageCounts[visit.page] = (pageCounts[visit.page] || 0) + 1;\n    });\n    \n    let maxPage = '暂无数据';\n    let maxCount = 0;\n    for (const page in pageCounts) {\n      if (pageCounts[page] > maxCount) {\n        maxCount = pageCounts[page];\n        maxPage = page;\n      }\n    }\n    setMostVisitedPage({ page: maxPage, count: maxCount });\n  };\n\n  // 格式化时间戳\n  const formatTimestamp = (timestamp) => {\n    return new Date(timestamp).toLocaleString('zh-CN', {\n      year: 'numeric',\n      month: '2-digit',\n      day: '2-digit',\n      hour: '2-digit',\n      minute: '2-digit',\n      second: '2-digit'\n    });\n  };\n\n  // 清空所有访问记录\n  const clearAllVisits = () => {\n    if (window.confirm('确定要清空所有访问记录吗？此操作不可恢复。')) {\n      localStorage.removeItem('visitRecords');\n      setVisits([]);\n      setFilteredVisits([]);\n      setTotalVisits(0);\n      setTodayVisits(0);\n      setMostVisitedPage({ page: '暂无数据', count: 0 });\n    }\n  };\n\n  // 获取页面的中文名称\n  const getPageDisplayName = (pageKey) => {\n    const pageNames = {\n      'travel': '旅游计划',\n      'games': '游戏中心',\n      'jokes': '笑话管理',\n      'tasks': '任务列表',\n      'realestate': '深圳房产信息',\n      'analytics': '数据分析',\n      'unknown': '未知页面'\n    };\n    return pageNames[pageKey] || pageKey;\n  };\n\n  return (\n    <div className=\"visit-tracker-container\">\n      <h2>📊 访问记录统计</h2>\n      \n      {/* 统计概览 */}\n      <div className=\"stats-overview\">\n        <div className=\"stat-card\">\n          <div className=\"stat-number\">{totalVisits}</div>\n          <div className=\"stat-label\">总访问次数</div>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-number\">{todayVisits}</div>\n          <div className=\"stat-label\">今日访问次数</div>\n        </div>\n        <div className=\"stat-card\">\n          <div className=\"stat-number\">{mostVisitedPage.count}</div>\n          <div className=\"stat-label\">\n            最常访问页面<br/>\n            <span className=\"most-visited-page\">{getPageDisplayName(mostVisitedPage.page)}</span>\n          </div>\n        </div>\n      </div>\n\n      {/* 日期范围筛选 */}\n      <div className=\"filter-section\">\n        <label>选择时间范围：</label>\n        <select \n          value={dateRange} \n          onChange={(e) => setDateRange(e.target.value)}\n          className=\"date-filter\"\n        >\n          <option value=\"all\">全部记录</option>\n          <option value=\"today\">今日</option>\n          <option value=\"week\">近7天</option>\n          <option value=\"month\">近30天</option>\n        </select>\n        <button className=\"clear-btn\" onClick={clearAllVisits}>\n          清空记录\n        </button>\n      </div>\n\n      {/* 访问记录列表 */}\n      <div className=\"visits-list-container\">\n        <h3>访问记录列表 ({filteredVisits.length} 条)</h3>\n        <div className=\"visits-list\">\n          {filteredVisits.length === 0 ? (\n            <div className=\"empty-state\">\n              暂无访问记录\n            </div>\n          ) : (\n            filteredVisits\n              .slice()\n              .reverse() // 倒序排列，最新的在前面\n              .map((visit, index) => (\n                <div key={index} className=\"visit-item\">\n                  <div className=\"visit-time\">{formatTimestamp(visit.timestamp)}</div>\n                  <div className=\"visit-info\">\n                    <div className=\"visit-page\">\n                      页面：{getPageDisplayName(visit.page)}\n                    </div>\n                    {visit.userInfo && (\n                      <div className=\"visit-user\">\n                        用户：{visit.userInfo}\n                      </div>\n                    )}\n                    {visit.deviceInfo && (\n                      <div className=\"visit-device\">\n                        设备：{visit.deviceInfo}\n                      </div>\n                    )}\n                  </div>\n                </div>\n              ))\n          )}\n        </div>\n      </div>\n\n      {/* 页面访问统计图表 */}\n      <div className=\"page-stats-section\">\n        <h3>页面访问统计</h3>\n        <div className=\"page-stats\">\n          {(() => {\n            // 计算各页面的访问次数\n            const pageCounts = {};\n            visits.forEach(visit => {\n              pageCounts[visit.page] = (pageCounts[visit.page] || 0) + 1;\n            });\n\n            // 转换为数组并排序\n            const sortedPages = Object.entries(pageCounts)\n              .map(([page, count]) => ({ page, count }))\n              .sort((a, b) => b.count - a.count);\n\n            return sortedPages.map((item, index) => {\n              const percentage = (item.count / visits.length) * 100;\n              return (\n                <div key={index} className=\"page-stat-item\">\n                  <div className=\"page-stat-label\">\n                    {getPageDisplayName(item.page)} ({item.count}次 - {percentage.toFixed(1)}%)\n                  </div>\n                  <div className=\"page-stat-bar\">\n                    <div \n                      className=\"page-stat-fill\" \n                      style={{ width: `${percentage}%` }}\n                    ></div>\n                  </div>\n                </div>\n              );\n            });\n          })()}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default VisitTracker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}