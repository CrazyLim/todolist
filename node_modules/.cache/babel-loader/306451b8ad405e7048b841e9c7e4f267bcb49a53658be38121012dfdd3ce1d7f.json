{"ast":null,"code":"var _jsxFileName = \"E:\\\\Leon\\\\todolist\\\\src\\\\components\\\\TankGame.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './TankGame.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TankGame = () => {\n  _s();\n  const BOARD_SIZE = 15;\n  const [gameState, setGameState] = useState({\n    player: {\n      x: 7,\n      y: 13,\n      direction: 'up',\n      color: 'blue'\n    },\n    enemies: [],\n    bullets: [],\n    obstacles: [],\n    score: 0,\n    lives: 3,\n    gameOver: false,\n    level: 1\n  });\n  const [keys, setKeys] = useState({});\n  const gameLoopRef = useRef(null);\n  const enemySpawnTimerRef = useRef(null);\n\n  // 初始化游戏状态\n  useEffect(() => {\n    resetGame();\n\n    // 清理函数\n    return () => {\n      if (gameLoopRef.current) {\n        clearInterval(gameLoopRef.current);\n      }\n      if (enemySpawnTimerRef.current) {\n        clearInterval(enemySpawnTimerRef.current);\n      }\n    };\n  }, []);\n\n  // 重置游戏\n  const resetGame = () => {\n    // 创建障碍物\n    const obstacles = [];\n    // 在地图周围创建围墙\n    for (let i = 0; i < BOARD_SIZE; i++) {\n      obstacles.push({\n        x: 0,\n        y: i\n      });\n      obstacles.push({\n        x: BOARD_SIZE - 1,\n        y: i\n      });\n      obstacles.push({\n        x: i,\n        y: 0\n      });\n      obstacles.push({\n        x: i,\n        y: BOARD_SIZE - 1\n      });\n    }\n    // 在地图中间创建一些随机障碍物\n    for (let i = 0; i < 15; i++) {\n      obstacles.push({\n        x: Math.floor(Math.random() * (BOARD_SIZE - 4)) + 2,\n        y: Math.floor(Math.random() * (BOARD_SIZE - 4)) + 2\n      });\n    }\n    setGameState({\n      player: {\n        x: 7,\n        y: 13,\n        direction: 'up',\n        color: 'blue'\n      },\n      enemies: [],\n      bullets: [],\n      obstacles: obstacles,\n      score: 0,\n      lives: 3,\n      gameOver: false,\n      level: 1\n    });\n\n    // 清除之前的游戏循环\n    if (gameLoopRef.current) {\n      clearInterval(gameLoopRef.current);\n    }\n    if (enemySpawnTimerRef.current) {\n      clearInterval(enemySpawnTimerRef.current);\n    }\n\n    // 开始游戏循环\n    gameLoopRef.current = setInterval(gameLoop, 100);\n    // 定时生成敌人\n    enemySpawnTimerRef.current = setInterval(spawnEnemy, 2000);\n  };\n\n  // 生成敌人\n  const spawnEnemy = () => {\n    if (gameState.gameOver) return;\n\n    // 在地图顶部随机位置生成敌人\n    const enemyX = Math.floor(Math.random() * (BOARD_SIZE - 4)) + 2;\n    const newEnemy = {\n      id: Date.now(),\n      x: enemyX,\n      y: 2,\n      direction: 'down',\n      color: 'red',\n      speed: 0.5 + Math.random() * 0.5 // 随机速度\n    };\n    setGameState(prev => ({\n      ...prev,\n      enemies: [...prev.enemies, newEnemy]\n    }));\n  };\n\n  // 游戏主循环\n  const gameLoop = () => {\n    if (gameState.gameOver) return;\n    setGameState(prev => {\n      // 移动玩家\n      let newPlayer = {\n        ...prev.player\n      };\n      if (keys['ArrowUp']) {\n        newPlayer.direction = 'up';\n        const newY = newPlayer.y - 1;\n        if (canMoveTo(newPlayer.x, newY, prev.obstacles, prev.enemies)) {\n          newPlayer.y = newY;\n        }\n      }\n      if (keys['ArrowDown']) {\n        newPlayer.direction = 'down';\n        const newY = newPlayer.y + 1;\n        if (canMoveTo(newPlayer.x, newY, prev.obstacles, prev.enemies)) {\n          newPlayer.y = newY;\n        }\n      }\n      if (keys['ArrowLeft']) {\n        newPlayer.direction = 'left';\n        const newX = newPlayer.x - 1;\n        if (canMoveTo(newX, newPlayer.y, prev.obstacles, prev.enemies)) {\n          newPlayer.x = newX;\n        }\n      }\n      if (keys['ArrowRight']) {\n        newPlayer.direction = 'right';\n        const newX = newPlayer.x + 1;\n        if (canMoveTo(newX, newPlayer.y, prev.obstacles, prev.enemies)) {\n          newPlayer.x = newX;\n        }\n      }\n\n      // 移动敌人\n      const newEnemies = prev.enemies.map(enemy => {\n        let newEnemy = {\n          ...enemy\n        };\n        // 简单的敌人AI：向下移动，如果碰到障碍物则随机改变方向\n        let moved = false;\n\n        // 随机改变方向（10%的概率）\n        if (Math.random() < 0.1) {\n          const directions = ['up', 'down', 'left', 'right'];\n          newEnemy.direction = directions[Math.floor(Math.random() * directions.length)];\n        }\n\n        // 尝试移动\n        switch (newEnemy.direction) {\n          case 'up':\n            if (canMoveTo(newEnemy.x, newEnemy.y - 1, prev.obstacles, prev.enemies.filter(e => e.id !== enemy.id))) {\n              newEnemy.y -= newEnemy.speed;\n              moved = true;\n            }\n            break;\n          case 'down':\n            if (canMoveTo(newEnemy.x, newEnemy.y + 1, prev.obstacles, prev.enemies.filter(e => e.id !== enemy.id))) {\n              newEnemy.y += newEnemy.speed;\n              moved = true;\n            }\n            break;\n          case 'left':\n            if (canMoveTo(newEnemy.x - 1, newEnemy.y, prev.obstacles, prev.enemies.filter(e => e.id !== enemy.id))) {\n              newEnemy.x -= newEnemy.speed;\n              moved = true;\n            }\n            break;\n          case 'right':\n            if (canMoveTo(newEnemy.x + 1, newEnemy.y, prev.obstacles, prev.enemies.filter(e => e.id !== enemy.id))) {\n              newEnemy.x += newEnemy.speed;\n              moved = true;\n            }\n            break;\n        }\n\n        // 如果无法移动，则随机改变方向\n        if (!moved && Math.random() < 0.3) {\n          const directions = ['up', 'down', 'left', 'right'];\n          newEnemy.direction = directions[Math.floor(Math.random() * directions.length)];\n        }\n        return newEnemy;\n      });\n\n      // 移动子弹\n      let newBullets = prev.bullets.map(bullet => {\n        let newBullet = {\n          ...bullet\n        };\n        switch (bullet.direction) {\n          case 'up':\n            newBullet.y -= 2;\n            break;\n          case 'down':\n            newBullet.y += 2;\n            break;\n          case 'left':\n            newBullet.x -= 2;\n            break;\n          case 'right':\n            newBullet.x += 2;\n            break;\n        }\n        return newBullet;\n      });\n\n      // 移除超出边界的子弹\n      newBullets = newBullets.filter(bullet => bullet.x >= 0 && bullet.x < BOARD_SIZE && bullet.y >= 0 && bullet.y < BOARD_SIZE);\n\n      // 检测子弹碰撞\n      let score = prev.score;\n      let lives = prev.lives;\n      let gameOver = prev.gameOver;\n\n      // 检测子弹是否击中敌人或障碍物\n      const bulletHits = [];\n      const enemyHits = [];\n      const obstacleHits = [];\n      newBullets.forEach((bullet, bulletIndex) => {\n        // 检查是否击中敌人\n        newEnemies.forEach((enemy, enemyIndex) => {\n          if (Math.abs(bullet.x - enemy.x) < 1 && Math.abs(bullet.y - enemy.y) < 1) {\n            bulletHits.push(bulletIndex);\n            enemyHits.push(enemyIndex);\n            if (bullet.type === 'player') {\n              score += 10;\n            }\n          }\n        });\n\n        // 检查是否击中障碍物\n        prev.obstacles.forEach((obstacle, obstacleIndex) => {\n          if (Math.abs(bullet.x - obstacle.x) < 0.5 && Math.abs(bullet.y - obstacle.y) < 0.5) {\n            bulletHits.push(bulletIndex);\n            obstacleHits.push(obstacleIndex);\n          }\n        });\n\n        // 检查是否击中玩家\n        if (bullet.type === 'enemy' && Math.abs(bullet.x - newPlayer.x) < 1 && Math.abs(bullet.y - newPlayer.y) < 1) {\n          bulletHits.push(bulletIndex);\n          lives -= 1;\n          if (lives <= 0) {\n            gameOver = true;\n          }\n        }\n      });\n\n      // 移除被击中的子弹、敌人和障碍物\n      newBullets = newBullets.filter((_, index) => !bulletHits.includes(index));\n      const remainingEnemies = newEnemies.filter((_, index) => !enemyHits.includes(index));\n      const remainingObstacles = prev.obstacles.filter((_, index) => !obstacleHits.includes(index));\n\n      // 检测玩家与敌人的碰撞\n      for (const enemy of remainingEnemies) {\n        if (Math.abs(newPlayer.x - enemy.x) < 1 && Math.abs(newPlayer.y - enemy.y) < 1) {\n          lives -= 1;\n          if (lives <= 0) {\n            gameOver = true;\n          }\n          break;\n        }\n      }\n\n      // 检查升级条件\n      let level = prev.level;\n      if (score >= level * 100) {\n        level += 1;\n        // 提高游戏难度：增加敌人速度\n        const fasterEnemies = remainingEnemies.map(enemy => ({\n          ...enemy,\n          speed: Math.min(enemy.speed + 0.1, 1.5)\n        }));\n        return {\n          ...prev,\n          player: newPlayer,\n          enemies: fasterEnemies,\n          bullets: newBullets,\n          obstacles: remainingObstacles,\n          score,\n          lives,\n          gameOver,\n          level\n        };\n      }\n      return {\n        ...prev,\n        player: newPlayer,\n        enemies: remainingEnemies,\n        bullets: newBullets,\n        obstacles: remainingObstacles,\n        score,\n        lives,\n        gameOver,\n        level\n      };\n    });\n  };\n\n  // 检查是否可以移动到指定位置\n  const canMoveTo = (x, y, obstacles, enemies) => {\n    // 检查边界\n    if (x < 0 || x >= BOARD_SIZE || y < 0 || y >= BOARD_SIZE) {\n      return false;\n    }\n\n    // 检查障碍物\n    for (const obstacle of obstacles) {\n      if (Math.abs(x - obstacle.x) < 0.5 && Math.abs(y - obstacle.y) < 0.5) {\n        return false;\n      }\n    }\n\n    // 检查敌人\n    for (const enemy of enemies) {\n      if (Math.abs(x - enemy.x) < 0.8 && Math.abs(y - enemy.y) < 0.8) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  // 处理键盘事件\n  useEffect(() => {\n    const handleKeyDown = e => {\n      if (gameState.gameOver) return;\n      setKeys(prev => ({\n        ...prev,\n        [e.key]: true\n      }));\n\n      // 空格键发射子弹\n      if (e.key === ' ') {\n        const bullet = {\n          x: gameState.player.x,\n          y: gameState.player.y,\n          direction: gameState.player.direction,\n          type: 'player'\n        };\n        setGameState(prev => ({\n          ...prev,\n          bullets: [...prev.bullets, bullet]\n        }));\n      }\n    };\n    const handleKeyUp = e => {\n      setKeys(prev => ({\n        ...prev,\n        [e.key]: false\n      }));\n    };\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameState.player, gameState.gameOver]);\n\n  // 渲染游戏格子\n  const renderBoard = () => {\n    const cells = [];\n    for (let y = 0; y < BOARD_SIZE; y++) {\n      for (let x = 0; x < BOARD_SIZE; x++) {\n        let cellClass = 'tank-cell';\n        let cellContent = null;\n\n        // 检查是否有障碍物\n        if (gameState.obstacles.some(obs => obs.x === x && obs.y === y)) {\n          cellClass += ' obstacle';\n        }\n\n        // 检查是否有坦克（玩家或敌人）\n        if (Math.round(gameState.player.x) === x && Math.round(gameState.player.y) === y) {\n          cellContent = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `tank player ${gameState.player.direction}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 13\n          }, this);\n        } else {\n          const enemyAtPosition = gameState.enemies.find(enemy => Math.round(enemy.x) === x && Math.round(enemy.y) === y);\n          if (enemyAtPosition) {\n            cellContent = /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `tank enemy ${enemyAtPosition.direction}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 382,\n              columnNumber: 15\n            }, this);\n          }\n        }\n\n        // 检查是否有子弹\n        const bulletAtPosition = gameState.bullets.find(bullet => Math.round(bullet.x) === x && Math.round(bullet.y) === y);\n        if (bulletAtPosition) {\n          cellContent = /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `bullet ${bulletAtPosition.direction} ${bulletAtPosition.type}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this);\n        }\n        cells.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: cellClass,\n          children: cellContent\n        }, `${x}-${y}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this));\n      }\n    }\n    return cells;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tank-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u5766\\u514B\\u5927\\u6218\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-stats\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [\"\\u5F97\\u5206: \", gameState.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 413,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [\"\\u751F\\u547D: \", gameState.lives]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 414,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stat-item\",\n        children: [\"\\u7B49\\u7EA7: \", gameState.level]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 415,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"\\u4F7F\\u7528\\u65B9\\u5411\\u952E\\u79FB\\u52A8\\u5766\\u514B\\uFF0C\\u7A7A\\u683C\\u952E\\u53D1\\u5C04\\u5B50\\u5F39\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 420,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 419,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tank-board\",\n        style: {\n          gridTemplateColumns: `repeat(${BOARD_SIZE}, 30px)`,\n          gridTemplateRows: `repeat(${BOARD_SIZE}, 30px)`\n        },\n        children: renderBoard()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 424,\n      columnNumber: 7\n    }, this), gameState.gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\u6E38\\u620F\\u7ED3\\u675F!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 437,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u6700\\u7EC8\\u5F97\\u5206: \", gameState.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 438,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"reset-btn\",\n        onClick: resetGame,\n        children: \"\\u91CD\\u65B0\\u5F00\\u59CB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 439,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 408,\n    columnNumber: 5\n  }, this);\n};\n_s(TankGame, \"rCpbR5m8Bp8SAp3Hjv9v/Kj3oZs=\");\n_c = TankGame;\nexport default TankGame;\nvar _c;\n$RefreshReg$(_c, \"TankGame\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","TankGame","_s","BOARD_SIZE","gameState","setGameState","player","x","y","direction","color","enemies","bullets","obstacles","score","lives","gameOver","level","keys","setKeys","gameLoopRef","enemySpawnTimerRef","resetGame","current","clearInterval","i","push","Math","floor","random","setInterval","gameLoop","spawnEnemy","enemyX","newEnemy","id","Date","now","speed","prev","newPlayer","newY","canMoveTo","newX","newEnemies","map","enemy","moved","directions","length","filter","e","newBullets","bullet","newBullet","bulletHits","enemyHits","obstacleHits","forEach","bulletIndex","enemyIndex","abs","type","obstacle","obstacleIndex","_","index","includes","remainingEnemies","remainingObstacles","fasterEnemies","min","handleKeyDown","key","handleKeyUp","window","addEventListener","removeEventListener","renderBoard","cells","cellClass","cellContent","some","obs","round","className","fileName","_jsxFileName","lineNumber","columnNumber","enemyAtPosition","find","bulletAtPosition","children","style","gridTemplateColumns","gridTemplateRows","onClick","_c","$RefreshReg$"],"sources":["E:/Leon/todolist/src/components/TankGame.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './TankGame.css';\n\nconst TankGame = () => {\n  const BOARD_SIZE = 15;\n  const [gameState, setGameState] = useState({ \n    player: { x: 7, y: 13, direction: 'up', color: 'blue' },\n    enemies: [],\n    bullets: [],\n    obstacles: [],\n    score: 0,\n    lives: 3,\n    gameOver: false,\n    level: 1\n  });\n  const [keys, setKeys] = useState({});\n  const gameLoopRef = useRef(null);\n  const enemySpawnTimerRef = useRef(null);\n\n  // 初始化游戏状态\n  useEffect(() => {\n    resetGame();\n\n    // 清理函数\n    return () => {\n      if (gameLoopRef.current) {\n        clearInterval(gameLoopRef.current);\n      }\n      if (enemySpawnTimerRef.current) {\n        clearInterval(enemySpawnTimerRef.current);\n      }\n    };\n  }, []);\n\n  // 重置游戏\n  const resetGame = () => {\n    // 创建障碍物\n    const obstacles = [];\n    // 在地图周围创建围墙\n    for (let i = 0; i < BOARD_SIZE; i++) {\n      obstacles.push({ x: 0, y: i });\n      obstacles.push({ x: BOARD_SIZE - 1, y: i });\n      obstacles.push({ x: i, y: 0 });\n      obstacles.push({ x: i, y: BOARD_SIZE - 1 });\n    }\n    // 在地图中间创建一些随机障碍物\n    for (let i = 0; i < 15; i++) {\n      obstacles.push({\n        x: Math.floor(Math.random() * (BOARD_SIZE - 4)) + 2,\n        y: Math.floor(Math.random() * (BOARD_SIZE - 4)) + 2\n      });\n    }\n\n    setGameState({\n      player: { x: 7, y: 13, direction: 'up', color: 'blue' },\n      enemies: [],\n      bullets: [],\n      obstacles: obstacles,\n      score: 0,\n      lives: 3,\n      gameOver: false,\n      level: 1\n    });\n\n    // 清除之前的游戏循环\n    if (gameLoopRef.current) {\n      clearInterval(gameLoopRef.current);\n    }\n    if (enemySpawnTimerRef.current) {\n      clearInterval(enemySpawnTimerRef.current);\n    }\n\n    // 开始游戏循环\n    gameLoopRef.current = setInterval(gameLoop, 100);\n    // 定时生成敌人\n    enemySpawnTimerRef.current = setInterval(spawnEnemy, 2000);\n  };\n\n  // 生成敌人\n  const spawnEnemy = () => {\n    if (gameState.gameOver) return;\n\n    // 在地图顶部随机位置生成敌人\n    const enemyX = Math.floor(Math.random() * (BOARD_SIZE - 4)) + 2;\n    const newEnemy = {\n      id: Date.now(),\n      x: enemyX,\n      y: 2,\n      direction: 'down',\n      color: 'red',\n      speed: 0.5 + Math.random() * 0.5 // 随机速度\n    };\n\n    setGameState(prev => ({\n      ...prev,\n      enemies: [...prev.enemies, newEnemy]\n    }));\n  };\n\n  // 游戏主循环\n  const gameLoop = () => {\n    if (gameState.gameOver) return;\n\n    setGameState(prev => {\n      // 移动玩家\n      let newPlayer = { ...prev.player };\n      if (keys['ArrowUp']) {\n        newPlayer.direction = 'up';\n        const newY = newPlayer.y - 1;\n        if (canMoveTo(newPlayer.x, newY, prev.obstacles, prev.enemies)) {\n          newPlayer.y = newY;\n        }\n      }\n      if (keys['ArrowDown']) {\n        newPlayer.direction = 'down';\n        const newY = newPlayer.y + 1;\n        if (canMoveTo(newPlayer.x, newY, prev.obstacles, prev.enemies)) {\n          newPlayer.y = newY;\n        }\n      }\n      if (keys['ArrowLeft']) {\n        newPlayer.direction = 'left';\n        const newX = newPlayer.x - 1;\n        if (canMoveTo(newX, newPlayer.y, prev.obstacles, prev.enemies)) {\n          newPlayer.x = newX;\n        }\n      }\n      if (keys['ArrowRight']) {\n        newPlayer.direction = 'right';\n        const newX = newPlayer.x + 1;\n        if (canMoveTo(newX, newPlayer.y, prev.obstacles, prev.enemies)) {\n          newPlayer.x = newX;\n        }\n      }\n\n      // 移动敌人\n      const newEnemies = prev.enemies.map(enemy => {\n        let newEnemy = { ...enemy };\n        // 简单的敌人AI：向下移动，如果碰到障碍物则随机改变方向\n        let moved = false;\n        \n        // 随机改变方向（10%的概率）\n        if (Math.random() < 0.1) {\n          const directions = ['up', 'down', 'left', 'right'];\n          newEnemy.direction = directions[Math.floor(Math.random() * directions.length)];\n        }\n\n        // 尝试移动\n        switch (newEnemy.direction) {\n          case 'up':\n            if (canMoveTo(newEnemy.x, newEnemy.y - 1, prev.obstacles, prev.enemies.filter(e => e.id !== enemy.id))) {\n              newEnemy.y -= newEnemy.speed;\n              moved = true;\n            }\n            break;\n          case 'down':\n            if (canMoveTo(newEnemy.x, newEnemy.y + 1, prev.obstacles, prev.enemies.filter(e => e.id !== enemy.id))) {\n              newEnemy.y += newEnemy.speed;\n              moved = true;\n            }\n            break;\n          case 'left':\n            if (canMoveTo(newEnemy.x - 1, newEnemy.y, prev.obstacles, prev.enemies.filter(e => e.id !== enemy.id))) {\n              newEnemy.x -= newEnemy.speed;\n              moved = true;\n            }\n            break;\n          case 'right':\n            if (canMoveTo(newEnemy.x + 1, newEnemy.y, prev.obstacles, prev.enemies.filter(e => e.id !== enemy.id))) {\n              newEnemy.x += newEnemy.speed;\n              moved = true;\n            }\n            break;\n        }\n\n        // 如果无法移动，则随机改变方向\n        if (!moved && Math.random() < 0.3) {\n          const directions = ['up', 'down', 'left', 'right'];\n          newEnemy.direction = directions[Math.floor(Math.random() * directions.length)];\n        }\n\n        return newEnemy;\n      });\n\n      // 移动子弹\n      let newBullets = prev.bullets.map(bullet => {\n        let newBullet = { ...bullet };\n        switch (bullet.direction) {\n          case 'up':\n            newBullet.y -= 2;\n            break;\n          case 'down':\n            newBullet.y += 2;\n            break;\n          case 'left':\n            newBullet.x -= 2;\n            break;\n          case 'right':\n            newBullet.x += 2;\n            break;\n        }\n        return newBullet;\n      });\n\n      // 移除超出边界的子弹\n      newBullets = newBullets.filter(\n        bullet => bullet.x >= 0 && bullet.x < BOARD_SIZE && bullet.y >= 0 && bullet.y < BOARD_SIZE\n      );\n\n      // 检测子弹碰撞\n      let score = prev.score;\n      let lives = prev.lives;\n      let gameOver = prev.gameOver;\n\n      // 检测子弹是否击中敌人或障碍物\n      const bulletHits = [];\n      const enemyHits = [];\n      const obstacleHits = [];\n\n      newBullets.forEach((bullet, bulletIndex) => {\n        // 检查是否击中敌人\n        newEnemies.forEach((enemy, enemyIndex) => {\n          if (Math.abs(bullet.x - enemy.x) < 1 && Math.abs(bullet.y - enemy.y) < 1) {\n            bulletHits.push(bulletIndex);\n            enemyHits.push(enemyIndex);\n            if (bullet.type === 'player') {\n              score += 10;\n            }\n          }\n        });\n\n        // 检查是否击中障碍物\n        prev.obstacles.forEach((obstacle, obstacleIndex) => {\n          if (Math.abs(bullet.x - obstacle.x) < 0.5 && Math.abs(bullet.y - obstacle.y) < 0.5) {\n            bulletHits.push(bulletIndex);\n            obstacleHits.push(obstacleIndex);\n          }\n        });\n\n        // 检查是否击中玩家\n        if (bullet.type === 'enemy' && Math.abs(bullet.x - newPlayer.x) < 1 && Math.abs(bullet.y - newPlayer.y) < 1) {\n          bulletHits.push(bulletIndex);\n          lives -= 1;\n          if (lives <= 0) {\n            gameOver = true;\n          }\n        }\n      });\n\n      // 移除被击中的子弹、敌人和障碍物\n      newBullets = newBullets.filter((_, index) => !bulletHits.includes(index));\n      const remainingEnemies = newEnemies.filter((_, index) => !enemyHits.includes(index));\n      const remainingObstacles = prev.obstacles.filter((_, index) => !obstacleHits.includes(index));\n\n      // 检测玩家与敌人的碰撞\n      for (const enemy of remainingEnemies) {\n        if (Math.abs(newPlayer.x - enemy.x) < 1 && Math.abs(newPlayer.y - enemy.y) < 1) {\n          lives -= 1;\n          if (lives <= 0) {\n            gameOver = true;\n          }\n          break;\n        }\n      }\n\n      // 检查升级条件\n      let level = prev.level;\n      if (score >= level * 100) {\n        level += 1;\n        // 提高游戏难度：增加敌人速度\n        const fasterEnemies = remainingEnemies.map(enemy => ({\n          ...enemy,\n          speed: Math.min(enemy.speed + 0.1, 1.5)\n        }));\n        return {\n          ...prev,\n          player: newPlayer,\n          enemies: fasterEnemies,\n          bullets: newBullets,\n          obstacles: remainingObstacles,\n          score,\n          lives,\n          gameOver,\n          level\n        };\n      }\n\n      return {\n        ...prev,\n        player: newPlayer,\n        enemies: remainingEnemies,\n        bullets: newBullets,\n        obstacles: remainingObstacles,\n        score,\n        lives,\n        gameOver,\n        level\n      };\n    });\n  };\n\n  // 检查是否可以移动到指定位置\n  const canMoveTo = (x, y, obstacles, enemies) => {\n    // 检查边界\n    if (x < 0 || x >= BOARD_SIZE || y < 0 || y >= BOARD_SIZE) {\n      return false;\n    }\n    \n    // 检查障碍物\n    for (const obstacle of obstacles) {\n      if (Math.abs(x - obstacle.x) < 0.5 && Math.abs(y - obstacle.y) < 0.5) {\n        return false;\n      }\n    }\n    \n    // 检查敌人\n    for (const enemy of enemies) {\n      if (Math.abs(x - enemy.x) < 0.8 && Math.abs(y - enemy.y) < 0.8) {\n        return false;\n      }\n    }\n    \n    return true;\n  };\n\n  // 处理键盘事件\n  useEffect(() => {\n    const handleKeyDown = (e) => {\n      if (gameState.gameOver) return;\n\n      setKeys(prev => ({ ...prev, [e.key]: true }));\n      \n      // 空格键发射子弹\n      if (e.key === ' ') {\n        const bullet = {\n          x: gameState.player.x,\n          y: gameState.player.y,\n          direction: gameState.player.direction,\n          type: 'player'\n        };\n        setGameState(prev => ({ ...prev, bullets: [...prev.bullets, bullet] }));\n      }\n    };\n\n    const handleKeyUp = (e) => {\n      setKeys(prev => ({ ...prev, [e.key]: false }));\n    };\n\n    window.addEventListener('keydown', handleKeyDown);\n    window.addEventListener('keyup', handleKeyUp);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n      window.removeEventListener('keyup', handleKeyUp);\n    };\n  }, [gameState.player, gameState.gameOver]);\n\n  // 渲染游戏格子\n  const renderBoard = () => {\n    const cells = [];\n    for (let y = 0; y < BOARD_SIZE; y++) {\n      for (let x = 0; x < BOARD_SIZE; x++) {\n        let cellClass = 'tank-cell';\n        let cellContent = null;\n\n        // 检查是否有障碍物\n        if (gameState.obstacles.some(obs => obs.x === x && obs.y === y)) {\n          cellClass += ' obstacle';\n        }\n\n        // 检查是否有坦克（玩家或敌人）\n        if (Math.round(gameState.player.x) === x && Math.round(gameState.player.y) === y) {\n          cellContent = (\n            <div className={`tank player ${gameState.player.direction}`}></div>\n          );\n        } else {\n          const enemyAtPosition = gameState.enemies.find(enemy => \n            Math.round(enemy.x) === x && Math.round(enemy.y) === y\n          );\n          if (enemyAtPosition) {\n            cellContent = (\n              <div className={`tank enemy ${enemyAtPosition.direction}`}></div>\n            );\n          }\n        }\n\n        // 检查是否有子弹\n        const bulletAtPosition = gameState.bullets.find(bullet => \n          Math.round(bullet.x) === x && Math.round(bullet.y) === y\n        );\n        if (bulletAtPosition) {\n          cellContent = (\n            <div className={`bullet ${bulletAtPosition.direction} ${bulletAtPosition.type}`}></div>\n          );\n        }\n\n        cells.push(\n          <div key={`${x}-${y}`} className={cellClass}>\n            {cellContent}\n          </div>\n        );\n      }\n    }\n    return cells;\n  };\n\n  return (\n    <div className=\"tank-game\">\n      <h2>坦克大战</h2>\n      \n      {/* 游戏状态显示 */}\n      <div className=\"game-stats\">\n        <div className=\"stat-item\">得分: {gameState.score}</div>\n        <div className=\"stat-item\">生命: {gameState.lives}</div>\n        <div className=\"stat-item\">等级: {gameState.level}</div>\n      </div>\n\n      {/* 游戏控制说明 */}\n      <div className=\"game-controls\">\n        <p>使用方向键移动坦克，空格键发射子弹</p>\n      </div>\n\n      {/* 游戏主界面 */}\n      <div className=\"game-board\">\n        {/* 游戏棋盘 */}\n        <div className=\"tank-board\" style={{ \n          gridTemplateColumns: `repeat(${BOARD_SIZE}, 30px)`,\n          gridTemplateRows: `repeat(${BOARD_SIZE}, 30px)`\n        }}>\n          {renderBoard()}\n        </div>\n      </div>\n\n      {/* 游戏结束界面 */}\n      {gameState.gameOver && (\n        <div className=\"game-over\">\n          <h3>游戏结束!</h3>\n          <p>最终得分: {gameState.score}</p>\n          <button className=\"reset-btn\" onClick={resetGame}>\n            重新开始\n          </button>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default TankGame;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}