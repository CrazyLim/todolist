{"ast":null,"code":"var _jsxFileName = \"E:\\\\Leon\\\\todolist\\\\src\\\\components\\\\Game2048.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport './Game2048.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Game2048 = () => {\n  _s();\n  // 游戏状态\n  const [board, setBoard] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [won, setWon] = useState(false);\n\n  // 初始化游戏\n  useEffect(() => {\n    startNewGame();\n  }, []);\n\n  // 开始新游戏\n  const startNewGame = () => {\n    // 创建4x4的空棋盘\n    const newBoard = Array(4).fill().map(() => Array(4).fill(0));\n    // 添加两个初始数字\n    addRandomNumber(newBoard);\n    addRandomNumber(newBoard);\n    // 更新状态\n    setBoard(newBoard);\n    setScore(0);\n    setGameOver(false);\n    setWon(false);\n  };\n\n  // 随机添加一个数字(2或4)\n  const addRandomNumber = currentBoard => {\n    const emptyCells = [];\n    // 找出所有空单元格\n    currentBoard.forEach((row, rowIndex) => {\n      row.forEach((cell, colIndex) => {\n        if (cell === 0) {\n          emptyCells.push({\n            row: rowIndex,\n            col: colIndex\n          });\n        }\n      });\n    });\n\n    // 如果没有空单元格，游戏结束\n    if (emptyCells.length === 0) {\n      setGameOver(true);\n      return currentBoard;\n    }\n\n    // 随机选择一个空单元格\n    const randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    // 90%概率生成2，10%概率生成4\n    const value = Math.random() < 0.9 ? 2 : 4;\n    // 在选定的单元格中添加数字\n    currentBoard[randomCell.row][randomCell.col] = value;\n    return currentBoard;\n  };\n\n  // 合并行\n  const mergeRow = row => {\n    // 过滤掉0\n    const filteredRow = row.filter(cell => cell !== 0);\n    let newRow = [];\n    let scoreIncrease = 0;\n    for (let i = 0; i < filteredRow.length; i++) {\n      // 如果当前单元格和下一个单元格相同，则合并\n      if (i + 1 < filteredRow.length && filteredRow[i] === filteredRow[i + 1]) {\n        const mergedValue = filteredRow[i] * 2;\n        newRow.push(mergedValue);\n        scoreIncrease += mergedValue;\n        i++;\n        // 检查是否达到2048\n        if (mergedValue === 2048) {\n          setWon(true);\n        }\n      } else {\n        newRow.push(filteredRow[i]);\n      }\n    }\n\n    // 填充剩余位置为0\n    while (newRow.length < 4) {\n      newRow.push(0);\n    }\n    return {\n      row: newRow,\n      scoreIncrease\n    };\n  };\n\n  // 处理移动\n  const handleMove = direction => {\n    if (gameOver || won) return;\n    let newBoard = JSON.parse(JSON.stringify(board));\n    let totalScoreIncrease = 0;\n    let moved = false;\n    switch (direction) {\n      case 'left':\n        for (let row = 0; row < 4; row++) {\n          const {\n            row: mergedRow,\n            scoreIncrease\n          } = mergeRow(newBoard[row]);\n          if (JSON.stringify(newBoard[row]) !== JSON.stringify(mergedRow)) {\n            moved = true;\n          }\n          newBoard[row] = mergedRow;\n          totalScoreIncrease += scoreIncrease;\n        }\n        break;\n      case 'right':\n        for (let row = 0; row < 4; row++) {\n          // 反转行，合并，然后再反转回来\n          const reversedRow = newBoard[row].slice().reverse();\n          const {\n            row: mergedRow,\n            scoreIncrease\n          } = mergeRow(reversedRow);\n          const finalRow = mergedRow.reverse();\n          if (JSON.stringify(newBoard[row]) !== JSON.stringify(finalRow)) {\n            moved = true;\n          }\n          newBoard[row] = finalRow;\n          totalScoreIncrease += scoreIncrease;\n        }\n        break;\n      case 'up':\n        for (let col = 0; col < 4; col++) {\n          // 提取列\n          const column = [];\n          for (let row = 0; row < 4; row++) {\n            column.push(newBoard[row][col]);\n          }\n          // 合并列\n          const {\n            row: mergedColumn,\n            scoreIncrease\n          } = mergeRow(column);\n          // 更新列\n          let columnMoved = false;\n          for (let row = 0; row < 4; row++) {\n            if (newBoard[row][col] !== mergedColumn[row]) {\n              columnMoved = true;\n            }\n            newBoard[row][col] = mergedColumn[row];\n          }\n          if (columnMoved) {\n            moved = true;\n          }\n          totalScoreIncrease += scoreIncrease;\n        }\n        break;\n      case 'down':\n        for (let col = 0; col < 4; col++) {\n          // 提取列并反转\n          const column = [];\n          for (let row = 0; row < 4; row++) {\n            column.push(newBoard[row][col]);\n          }\n          const reversedColumn = column.reverse();\n          // 合并列\n          const {\n            row: mergedColumn,\n            scoreIncrease\n          } = mergeRow(reversedColumn);\n          // 反转回来并更新列\n          const finalColumn = mergedColumn.reverse();\n          let columnMoved = false;\n          for (let row = 0; row < 4; row++) {\n            if (newBoard[row][col] !== finalColumn[row]) {\n              columnMoved = true;\n            }\n            newBoard[row][col] = finalColumn[row];\n          }\n          if (columnMoved) {\n            moved = true;\n          }\n          totalScoreIncrease += scoreIncrease;\n        }\n        break;\n      default:\n        return;\n    }\n\n    // 如果有移动，则更新分数并添加新数字\n    if (moved) {\n      setScore(prevScore => prevScore + totalScoreIncrease);\n      addRandomNumber(newBoard);\n      setBoard(newBoard);\n\n      // 检查游戏是否结束\n      if (!canMove(newBoard)) {\n        setGameOver(true);\n      }\n    }\n  };\n\n  // 检查是否还能移动\n  const canMove = currentBoard => {\n    // 检查是否有空单元格\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (currentBoard[row][col] === 0) {\n          return true;\n        }\n      }\n    }\n\n    // 检查水平方向是否可以合并\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 3; col++) {\n        if (currentBoard[row][col] === currentBoard[row][col + 1]) {\n          return true;\n        }\n      }\n    }\n\n    // 检查垂直方向是否可以合并\n    for (let col = 0; col < 4; col++) {\n      for (let row = 0; row < 3; row++) {\n        if (currentBoard[row][col] === currentBoard[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n    return false;\n  };\n\n  // 键盘控制\n  const handleKeyDown = useCallback(e => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        handleMove('left');\n        break;\n      case 'ArrowRight':\n        handleMove('right');\n        break;\n      case 'ArrowUp':\n        handleMove('up');\n        break;\n      case 'ArrowDown':\n        handleMove('down');\n        break;\n      default:\n        return;\n    }\n  }, [board, gameOver, won]);\n\n  // 监听键盘事件\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-2048\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"2048\\u6E38\\u620F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u5206\\u6570: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this), won && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"win-message\",\n        children: \"\\u606D\\u559C\\u4F60\\u8D62\\u4E86\\uFF01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 17\n      }, this), gameOver && !won && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"game-over-message\",\n        children: \"\\u6E38\\u620F\\u7ED3\\u675F\\uFF01\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: board.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell cell-${cell}`,\n          children: cell !== 0 && cell\n        }, colIndex, false, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this))\n      }, rowIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 256,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 254,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startNewGame,\n        children: \"\\u91CD\\u65B0\\u5F00\\u59CB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"direction-buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMove('up'),\n          className: \"direction-btn\",\n          children: \"\\u2191\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"horizontal-buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMove('left'),\n            className: \"direction-btn\",\n            children: \"\\u2190\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleMove('right'),\n            className: \"direction-btn\",\n            children: \"\\u2192\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleMove('down'),\n          className: \"direction-btn\",\n          children: \"\\u2193\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"control-hint\",\n        children: \"\\u4F7F\\u7528\\u65B9\\u5411\\u952E\\u6216\\u5C4F\\u5E55\\u6309\\u94AE\\u79FB\\u52A8\\u6570\\u5B57\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 247,\n    columnNumber: 5\n  }, this);\n};\n_s(Game2048, \"e1uD2gr4g3refQgKKGLEKcdrBDU=\");\n_c = Game2048;\nexport default Game2048;\nvar _c;\n$RefreshReg$(_c, \"Game2048\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","jsxDEV","_jsxDEV","Game2048","_s","board","setBoard","score","setScore","gameOver","setGameOver","won","setWon","startNewGame","newBoard","Array","fill","map","addRandomNumber","currentBoard","emptyCells","forEach","row","rowIndex","cell","colIndex","push","col","length","randomCell","Math","floor","random","value","mergeRow","filteredRow","filter","newRow","scoreIncrease","i","mergedValue","handleMove","direction","JSON","parse","stringify","totalScoreIncrease","moved","mergedRow","reversedRow","slice","reverse","finalRow","column","mergedColumn","columnMoved","reversedColumn","finalColumn","prevScore","canMove","handleKeyDown","e","key","window","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["E:/Leon/todolist/src/components/Game2048.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport './Game2048.css';\n\nconst Game2048 = () => {\n  // 游戏状态\n  const [board, setBoard] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [won, setWon] = useState(false);\n\n  // 初始化游戏\n  useEffect(() => {\n    startNewGame();\n  }, []);\n\n  // 开始新游戏\n  const startNewGame = () => {\n    // 创建4x4的空棋盘\n    const newBoard = Array(4).fill().map(() => Array(4).fill(0));\n    // 添加两个初始数字\n    addRandomNumber(newBoard);\n    addRandomNumber(newBoard);\n    // 更新状态\n    setBoard(newBoard);\n    setScore(0);\n    setGameOver(false);\n    setWon(false);\n  };\n\n  // 随机添加一个数字(2或4)\n  const addRandomNumber = (currentBoard) => {\n    const emptyCells = [];\n    // 找出所有空单元格\n    currentBoard.forEach((row, rowIndex) => {\n      row.forEach((cell, colIndex) => {\n        if (cell === 0) {\n          emptyCells.push({ row: rowIndex, col: colIndex });\n        }\n      });\n    });\n\n    // 如果没有空单元格，游戏结束\n    if (emptyCells.length === 0) {\n      setGameOver(true);\n      return currentBoard;\n    }\n\n    // 随机选择一个空单元格\n    const randomCell = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n    // 90%概率生成2，10%概率生成4\n    const value = Math.random() < 0.9 ? 2 : 4;\n    // 在选定的单元格中添加数字\n    currentBoard[randomCell.row][randomCell.col] = value;\n\n    return currentBoard;\n  };\n\n  // 合并行\n  const mergeRow = (row) => {\n    // 过滤掉0\n    const filteredRow = row.filter(cell => cell !== 0);\n    let newRow = [];\n    let scoreIncrease = 0;\n\n    for (let i = 0; i < filteredRow.length; i++) {\n      // 如果当前单元格和下一个单元格相同，则合并\n      if (i + 1 < filteredRow.length && filteredRow[i] === filteredRow[i + 1]) {\n        const mergedValue = filteredRow[i] * 2;\n        newRow.push(mergedValue);\n        scoreIncrease += mergedValue;\n        i++;\n        // 检查是否达到2048\n        if (mergedValue === 2048) {\n          setWon(true);\n        }\n      } else {\n        newRow.push(filteredRow[i]);\n      }\n    }\n\n    // 填充剩余位置为0\n    while (newRow.length < 4) {\n      newRow.push(0);\n    }\n\n    return { row: newRow, scoreIncrease };\n  };\n\n  // 处理移动\n  const handleMove = (direction) => {\n    if (gameOver || won) return;\n\n    let newBoard = JSON.parse(JSON.stringify(board));\n    let totalScoreIncrease = 0;\n    let moved = false;\n\n    switch (direction) {\n      case 'left':\n        for (let row = 0; row < 4; row++) {\n          const { row: mergedRow, scoreIncrease } = mergeRow(newBoard[row]);\n          if (JSON.stringify(newBoard[row]) !== JSON.stringify(mergedRow)) {\n            moved = true;\n          }\n          newBoard[row] = mergedRow;\n          totalScoreIncrease += scoreIncrease;\n        }\n        break;\n      case 'right':\n        for (let row = 0; row < 4; row++) {\n          // 反转行，合并，然后再反转回来\n          const reversedRow = newBoard[row].slice().reverse();\n          const { row: mergedRow, scoreIncrease } = mergeRow(reversedRow);\n          const finalRow = mergedRow.reverse();\n          if (JSON.stringify(newBoard[row]) !== JSON.stringify(finalRow)) {\n            moved = true;\n          }\n          newBoard[row] = finalRow;\n          totalScoreIncrease += scoreIncrease;\n        }\n        break;\n      case 'up':\n        for (let col = 0; col < 4; col++) {\n          // 提取列\n          const column = [];\n          for (let row = 0; row < 4; row++) {\n            column.push(newBoard[row][col]);\n          }\n          // 合并列\n          const { row: mergedColumn, scoreIncrease } = mergeRow(column);\n          // 更新列\n          let columnMoved = false;\n          for (let row = 0; row < 4; row++) {\n            if (newBoard[row][col] !== mergedColumn[row]) {\n              columnMoved = true;\n            }\n            newBoard[row][col] = mergedColumn[row];\n          }\n          if (columnMoved) {\n            moved = true;\n          }\n          totalScoreIncrease += scoreIncrease;\n        }\n        break;\n      case 'down':\n        for (let col = 0; col < 4; col++) {\n          // 提取列并反转\n          const column = [];\n          for (let row = 0; row < 4; row++) {\n            column.push(newBoard[row][col]);\n          }\n          const reversedColumn = column.reverse();\n          // 合并列\n          const { row: mergedColumn, scoreIncrease } = mergeRow(reversedColumn);\n          // 反转回来并更新列\n          const finalColumn = mergedColumn.reverse();\n          let columnMoved = false;\n          for (let row = 0; row < 4; row++) {\n            if (newBoard[row][col] !== finalColumn[row]) {\n              columnMoved = true;\n            }\n            newBoard[row][col] = finalColumn[row];\n          }\n          if (columnMoved) {\n            moved = true;\n          }\n          totalScoreIncrease += scoreIncrease;\n        }\n        break;\n      default:\n        return;\n    }\n\n    // 如果有移动，则更新分数并添加新数字\n    if (moved) {\n      setScore(prevScore => prevScore + totalScoreIncrease);\n      addRandomNumber(newBoard);\n      setBoard(newBoard);\n\n      // 检查游戏是否结束\n      if (!canMove(newBoard)) {\n        setGameOver(true);\n      }\n    }\n  };\n\n  // 检查是否还能移动\n  const canMove = (currentBoard) => {\n    // 检查是否有空单元格\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 4; col++) {\n        if (currentBoard[row][col] === 0) {\n          return true;\n        }\n      }\n    }\n\n    // 检查水平方向是否可以合并\n    for (let row = 0; row < 4; row++) {\n      for (let col = 0; col < 3; col++) {\n        if (currentBoard[row][col] === currentBoard[row][col + 1]) {\n          return true;\n        }\n      }\n    }\n\n    // 检查垂直方向是否可以合并\n    for (let col = 0; col < 4; col++) {\n      for (let row = 0; row < 3; row++) {\n        if (currentBoard[row][col] === currentBoard[row + 1][col]) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  // 键盘控制\n  const handleKeyDown = useCallback((e) => {\n    switch (e.key) {\n      case 'ArrowLeft':\n        handleMove('left');\n        break;\n      case 'ArrowRight':\n        handleMove('right');\n        break;\n      case 'ArrowUp':\n        handleMove('up');\n        break;\n      case 'ArrowDown':\n        handleMove('down');\n        break;\n      default:\n        return;\n    }\n  }, [board, gameOver, won]);\n\n  // 监听键盘事件\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown);\n    return () => {\n      window.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  return (\n    <div className=\"game-2048\">\n      <h2>2048游戏</h2>\n      <div className=\"game-info\">\n        <p>分数: {score}</p>\n        {won && <p className=\"win-message\">恭喜你赢了！</p>}\n        {gameOver && !won && <p className=\"game-over-message\">游戏结束！</p>}\n      </div>\n      <div className=\"game-board\">\n        {board.map((row, rowIndex) => (\n          <div key={rowIndex} className=\"board-row\">\n            {row.map((cell, colIndex) => (\n              <div key={colIndex} className={`cell cell-${cell}`}>\n                {cell !== 0 && cell}\n              </div>\n            ))}\n          </div>\n        ))}\n      </div>\n      <div className=\"game-controls\">\n        <button onClick={startNewGame}>重新开始</button>\n        <div className=\"direction-buttons\">\n          <button onClick={() => handleMove('up')} className=\"direction-btn\">↑</button>\n          <div className=\"horizontal-buttons\">\n            <button onClick={() => handleMove('left')} className=\"direction-btn\">←</button>\n            <button onClick={() => handleMove('right')} className=\"direction-btn\">→</button>\n          </div>\n          <button onClick={() => handleMove('down')} className=\"direction-btn\">↓</button>\n        </div>\n        <p className=\"control-hint\">使用方向键或屏幕按钮移动数字</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Game2048;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}